From 1a2f6322c0d0733412defd3cdfdd31d1c714073d Mon Sep 17 00:00:00 2001
From: chaotic-bruno <lukas.probsthain@gmail.com>
Date: Sat, 30 Jan 2021 14:56:30 +0100
Subject: [PATCH] update naoqi for standalone base_footprint and externel
 odometry

---
 share/boot_config.json           | 20 ++++++++++----------
 src/converters/joint_state.cpp   |  5 +++--
 src/converters/nao_footprint.hpp | 22 +++++++++++-----------
 src/naoqi_driver.cpp             |  2 +-
 4 files changed, 25 insertions(+), 24 deletions(-)

diff --git a/share/boot_config.json b/share/boot_config.json
index 322d72c..d6add13 100644
--- a/share/boot_config.json
+++ b/share/boot_config.json
@@ -4,21 +4,21 @@
   {
     "front_camera":
     {
-      "enabled"       : true,
+      "enabled"       : false,
       "resolution"    : 1,
       "fps"           : 10,
       "recorder_fps"  : 5
     },
     "bottom_camera":
     {
-      "enabled"       : true,
+      "enabled"       : false,
       "resolution"    : 1,
       "fps"           : 10,
       "recorder_fps"  : 5
     },
     "depth_camera":
     {
-      "enabled"       : true,
+      "enabled"       : false,
       "xtion_resolution": 1,
       "stereo_resolution": 9,
       "fps"           : 10,
@@ -26,14 +26,14 @@
     },
     "stereo_camera":
     {
-      "enabled"       : true,
+      "enabled"       : false,
       "resolution"    : 15,
       "fps"           : 10,
       "recorder_fps"  : 5
     },
     "ir_camera":
     {
-      "enabled"       : true,
+      "enabled"       : false,
       "resolution"    : 1,
       "fps"           : 10,
       "recorder_fps"  : 5
@@ -55,29 +55,29 @@
     },
     "imu_torso":
     {
-      "enabled"       : true,
+      "enabled"       : false,
       "frequency"     : 10
     },
     "imu_base":
     {
-      "enabled"       : true,
+      "enabled"       : false,
       "frequency"     : 10
     },
     "joint_states":
     {
       "enabled"       : true,
-      "frequency"     : 50
+      "frequency"     : 30
     },
     "laser":
     {
-      "enabled"       : true,
+      "enabled"       : false,
       "frequency"     : 10,
       "range_min"     : 0.1,
       "range_max"     : 3.0
     },
     "sonar":
     {
-      "enabled"       : true,
+      "enabled"       : false,
       "frequency"     : 10
     },
     "audio":
diff --git a/src/converters/joint_state.cpp b/src/converters/joint_state.cpp
index 65a6d23..1464735 100644
--- a/src/converters/joint_state.cpp
+++ b/src/converters/joint_state.cpp
@@ -163,7 +163,8 @@ void JointStateConverter::callAll( const std::vector<message_actions::MessageAct
   const ros::Time& odom_stamp = ros::Time::now();
   const float& odomX  =  al_odometry_data[0];
   const float& odomY  =  al_odometry_data[1];
-  const float& odomZ  =  al_odometry_data[2];
+  //const float& odomZ  =  al_odometry_data[2];
+  const float& odomZ = 0.0f;
   const float& odomWX =  al_odometry_data[3];
   const float& odomWY =  al_odometry_data[4];
   const float& odomWZ =  al_odometry_data[5];
@@ -174,7 +175,7 @@ void JointStateConverter::callAll( const std::vector<message_actions::MessageAct
 
   static geometry_msgs::TransformStamped msg_tf_odom;
   msg_tf_odom.header.frame_id = "odom";
-  msg_tf_odom.child_frame_id = "base_link";
+  msg_tf_odom.child_frame_id = "base_footprint";
   msg_tf_odom.header.stamp = odom_stamp;
 
   msg_tf_odom.transform.translation.x = odomX;
diff --git a/src/converters/nao_footprint.hpp b/src/converters/nao_footprint.hpp
index 24e9c10..e126ada 100644
--- a/src/converters/nao_footprint.hpp
+++ b/src/converters/nao_footprint.hpp
@@ -83,23 +83,23 @@ inline void addBaseFootprint( boost::shared_ptr<tf2_ros::Buffer> tf2_buffer, std
       );
   tf2::Transform tf_odom_to_base_conv( q,r);
   //tf2::Transform tf_odom_to_base_conv;
-  //tf2::convert( tf_odom_to_base.transform, tf_odom_to_base_conv );
-  tf2::Transform tf_base_to_footprint = tf_odom_to_base_conv.inverse() * tf_odom_to_footprint;*/
+  //tf2::convert( tf_odom_to_base.transform, tf_odom_to_base_conv ); */
+  tf2::Transform tf_foot_to_base = tf_base_to_foot.inverse();
 
   // convert it back to geometry_msgs
   geometry_msgs::TransformStamped message;
   //message.transform = tf2::toMsg(tf_base_to_footprint);
   message.header.stamp = time;
-  message.header.frame_id = "base_link";
-  message.child_frame_id = "base_footprint";
+  message.header.frame_id = "base_footprint";
+  message.child_frame_id = "base_link";
 
-  message.transform.rotation.x = tf_base_to_foot.getRotation().x();
-  message.transform.rotation.y = tf_base_to_foot.getRotation().y();
-  message.transform.rotation.z = tf_base_to_foot.getRotation().z();
-  message.transform.rotation.w = tf_base_to_foot.getRotation().w();
-  message.transform.translation.x = tf_base_to_foot.getOrigin().x();
-  message.transform.translation.y = tf_base_to_foot.getOrigin().y();
-  message.transform.translation.z = tf_base_to_foot.getOrigin().z();
+  message.transform.rotation.x = tf_foot_to_base.getRotation().x();
+  message.transform.rotation.y = tf_foot_to_base.getRotation().y();
+  message.transform.rotation.z = tf_foot_to_base.getRotation().z();
+  message.transform.rotation.w = tf_foot_to_base.getRotation().w();
+  message.transform.translation.x = tf_foot_to_base.getOrigin().x();
+  message.transform.translation.y = tf_foot_to_base.getOrigin().y();
+  message.transform.translation.z = tf_foot_to_base.getOrigin().z();
 
   //tf::transformTFToMsg( tf_base_to_footprint, message.transform);
   // publish transform with parent m_baseFrameId and new child m_baseFootPrintID
diff --git a/src/naoqi_driver.cpp b/src/naoqi_driver.cpp
index e25cf5a..24f4326 100644
--- a/src/naoqi_driver.cpp
+++ b/src/naoqi_driver.cpp
@@ -929,7 +929,7 @@ void Driver::registerDefaultSubscriber()
   if (!subscribers_.empty())
     return;
   registerSubscriber( boost::make_shared<naoqi::subscriber::TeleopSubscriber>("teleop", "/cmd_vel", "/joint_angles", sessionPtr_) );
-  registerSubscriber( boost::make_shared<naoqi::subscriber::MovetoSubscriber>("moveto", "/move_base_simple/goal", sessionPtr_, tf2_buffer_) );
+  //registerSubscriber( boost::make_shared<naoqi::subscriber::MovetoSubscriber>("moveto", "/move_base_simple/goal", sessionPtr_, tf2_buffer_) );
   registerSubscriber( boost::make_shared<naoqi::subscriber::SpeechSubscriber>("speech", "/speech", sessionPtr_) );
 }
 
-- 
2.17.1

